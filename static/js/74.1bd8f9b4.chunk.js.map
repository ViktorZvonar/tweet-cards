{"version":3,"file":"static/js/74.1bd8f9b4.chunk.js","mappings":"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","sources":["shared/services/TweetApi.js","components/Tweets/TweetItem/TweetItem.styles.js","components/Tweets/TweetButton/TweetButton.styles.js","components/Tweets/TweetButton/TweetButton.jsx","components/Tweets/TweetItem/TweetItem.jsx","components/Tweets/TweetList/TweetList.styles.js","components/Tweets/TweetList/TweetList.jsx","pages/TweetsPage/TweetsPage.jsx","shared/LinkComponent/LinkComponent.styles.js","shared/LinkComponent/LinkComponent.jsx","shared/Wrapper/Wrapper.styles.js","shared/Wrapper/Wrapper.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  headers: {\n    'content-type': 'application/json',\n    'Access-Control-Allow-Origin': '',\n    'Access-Control-Allow-Methods': '',\n    'Access-Control-Allow-Headers': '',\n    'Access-Control-Expose-Headers': '',\n    'Access-Control-Allow-Credentials': 'false',\n    'Access-Control-Max-Age': '0',\n  },\n});\n\nexport const getTweets = async page => {\n  try {\n    const res = await instance.get(`/?page=${page}&limit=3`);\n    return res;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const updateFollowers = async tweet => {\n  try {\n    const updatedTweet = {\n      ...tweet,\n      followers: tweet.followers,\n      isFollowing: !tweet.isFollowing,\n    };\n    const res = await instance.put(`/${tweet.id}`, updatedTweet);\n    return res;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","import styled from 'styled-components';\n\nimport picture from '../../../images/picture.png';\nimport picture2x from '../../../images/picture@2x.png';\n\nexport const Card = styled.div`\n  position: relative;\n  width: 380px;\n  height: 460px;\n  padding: 28px 36px 36px;\n\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    height: 8px;\n    width: 100%;\n    background: #ebd8ff;\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n      inset 0px -1.71846px 3.43693px #ae7be3,\n      inset 0px 3.43693px 2.5777px #fbf8ff;\n    z-index: 1;\n  }\n`;\n\nexport const AvatarContainer = styled.div`\n  position: absolute;\n  transform: translate(-50%, -50%);\n  left: 50%;\n  top: 50%;\n  z-index: 2;\n\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  border: 8px solid #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n`;\n\nexport const Avatar = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  object-fit: cover;\n`;\n\nexport const Logo = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const UserInfo = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 88px;\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n\n  color: #ebd8ff;\n`;\n\nexport const LogoContainer = styled.div`\n  position: absolute;\n  left: 20px;\n  top: 20px;\n  width: 76px;\n  height: 22px;\n`;\n\nexport const BackgroundFeature = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  width: 308px;\n  height: 168px;\n  left: 36px;\n  top: 28px;\n  z-index: 999;\n  background-image: url(${picture});\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${picture2x});\n  }\n`;\n","import styled from 'styled-components';\n\nexport const FollowButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 14px 28px;\n  width: 196px;\n  height: 50px;\n\n  margin: 26px auto auto auto;\n\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #373737;\n  background: ${props => (props.isFollowing ? '#5cd3a8' : '#ebd8ff')};\n\n  &:hover {\n    background: ${props => (props.isFollowing ? '#4dbf96' : '#d4c1e7')};\n    cursor: pointer;\n  }\n\n  &:focus {\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const LoadMoreButton = styled(FollowButton)`\n  position: sticky;\n  transform: translateX(-50%);\n  left: 50%;\n  margin: 0 0 26px 0;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FollowButton, LoadMoreButton } from './TweetButton.styles';\n\nconst TweetButton = ({ children, onClick, isFollowing, buttonType }) => {\n  const ButtonComponent =\n    buttonType === 'follow' ? FollowButton : LoadMoreButton;\n  return (\n    <ButtonComponent isFollowing={isFollowing} onClick={onClick}>\n      {children}\n    </ButtonComponent>\n  );\n};\n\nTweetButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired,\n  isFollowing: PropTypes.bool,\n  buttonType: PropTypes.oneOf(['follow', 'loadMore']).isRequired,\n};\n\nexport default TweetButton;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport numeral from 'numeral';\n\nimport {\n  Card,\n  AvatarContainer,\n  Avatar,\n  UserInfo,\n  BackgroundFeature,\n  LogoContainer,\n  Logo,\n} from './TweetItem.styles';\n\nimport TweetButton from '../TweetButton/TweetButton';\n\nimport { updateFollowers } from 'shared/services/TweetApi';\n\nimport logoImage from '../../../images/Logo.png';\nimport logoImage2x from '../../../images/Logo@2x.png';\n\nconst TweetItem = ({ tweet }) => {\n  const [isFollowing, setIsFollowing] = useState(tweet.isFollowing);\n\n  const handleFollowButtonClick = async () => {\n    setIsFollowing(!isFollowing);\n\n    if (isFollowing) {\n      tweet.followers -= 1;\n    } else {\n      tweet.followers += 1;\n    }\n\n    try {\n      await updateFollowers(tweet);\n    } catch (error) {\n      console.log('Error updating followers:', error);\n    }\n  };\n\n  return (\n    <Card>\n      <LogoContainer>\n        <Logo\n          src={logoImage}\n          srcSet={`${logoImage} 1x, ${logoImage2x} 2x`}\n          alt=\"Logo\"\n        />\n      </LogoContainer>\n\n      <BackgroundFeature />\n      <AvatarContainer>\n        <Avatar src={tweet.avatar} alt={`${tweet.user}'s avatar`} />\n      </AvatarContainer>\n      <UserInfo>\n        <p>{tweet.tweets} tweets</p>\n        <p>{numeral(tweet.followers).format('0,0')} followers</p>\n      </UserInfo>\n\n      <TweetButton\n        buttonType=\"follow\"\n        isFollowing={isFollowing}\n        onClick={handleFollowButtonClick}\n      >\n        {isFollowing ? 'Following' : 'Follow'}\n      </TweetButton>\n    </Card>\n  );\n};\n\nTweetItem.propTypes = {\n  tweet: PropTypes.shape({\n    user: PropTypes.string,\n    tweets: PropTypes.number,\n    followers: PropTypes.number,\n    avatar: PropTypes.string,\n  }).isRequired,\n};\n\nexport default TweetItem;\n","import styled from 'styled-components';\n\nexport const CollectionContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  gap: 48px;\n  margin-top: 24px;\n  justify-content: center;\n`;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nimport { getTweets } from 'shared/services/TweetApi';\n\nimport TweetItem from '../TweetItem/TweetItem';\nimport TweetButton from '../TweetButton/TweetButton';\nimport { CollectionContainer } from './TweetList.styles';\n\nconst TweetList = () => {\n  const [tweets, setTweets] = useState([]);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await getTweets(page);\n        if (res.data.length === 0) {\n          alert('No more users with tweets');\n          return;\n        }\n        if (page === 1) {\n          setTweets(res.data);\n        } else {\n          setTweets(prevTweets => [...prevTweets, ...res.data]);\n        }\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchData();\n  }, [page]);\n\n  const handleLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <CollectionContainer>\n      {tweets.map(tweet => (\n        <TweetItem key={nanoid()} tweet={tweet} />\n      ))}\n      <TweetButton buttonType=\"loadMore\" onClick={handleLoadMore}>\n        Load More\n      </TweetButton>\n    </CollectionContainer>\n  );\n};\n\nTweetList.propTypes = {\n  tweet: PropTypes.shape({\n    user: PropTypes.string.isRequired,\n    tweets: PropTypes.number.isRequired,\n    followers: PropTypes.number.isRequired,\n    avatar: PropTypes.string.isRequired,\n  }),\n};\n\nexport default TweetList;\n","import React from 'react';\n\nimport Wrapper from 'shared/Wrapper/Wrapper';\nimport TweetList from '../../components/Tweets/TweetList/TweetList';\nimport LinkComponent from 'shared/LinkComponent/LinkComponent';\n\nconst TweetPage = () => {\n  return (\n    <Wrapper>\n      <LinkComponent to=\"/\">Back</LinkComponent>\n      <TweetList />\n    </Wrapper>\n  );\n};\n\nexport default TweetPage;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 14px 28px;\n  width: 220px;\n  height: 50px;\n\n  position: absolute;\n  transform: translate(-50%, -50%);\n  left: 50%;\n  top: 50%;\n\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border: 1px solid black;\n  border-radius: 10.3108px;\n\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.2;\n  text-transform: uppercase;\n\n  background-color: #ebd8ff;\n\n  &:hover {\n    background-color: #5cd3a8;\n  }\n\n  &:focus {\n    box-shadow: 0px 0px 10px #5cd3a8;\n  }\n`;\n\nexport const Back = styled(Link)`\n  position: fixed;\n  width: 96px;\n  height: 50px;\n  left: 70px;\n  top: 50px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Back } from './LinkComponent.styles';\n\nconst LinkComponent = ({ to, children, linkType }) => {\n  const LinkType = linkType === 'link' ? Link : Back;\n  return <LinkType to={to}>{children}</LinkType>;\n};\n\nLinkComponent.propTypes = {\n  to: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  linkType: PropTypes.oneOf(['link', 'back']),\n};\n\nexport default LinkComponent;\n","import styled from 'styled-components';\n\nexport const WrapperDiv = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 20px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { WrapperDiv } from './Wrapper.styles';\n\nconst Wrapper = ({ children }) => <WrapperDiv>{children}</WrapperDiv>;\n\nWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Wrapper;\n"],"names":["instance","axios","baseURL","process","headers","getTweets","page","get","res","console","log","message","updateFollowers","tweet","updatedTweet","followers","isFollowing","put","id","Card","styled","AvatarContainer","Avatar","Logo","UserInfo","LogoContainer","BackgroundFeature","picture","picture2x","FollowButton","props","LoadMoreButton","children","onClick","ButtonComponent","buttonType","useState","setIsFollowing","handleFollowButtonClick","src","logoImage","srcSet","alt","avatar","user","tweets","numeral","format","CollectionContainer","setTweets","setPage","useEffect","fetchData","data","length","alert","prevTweets","map","nanoid","prevPage","Wrapper","LinkComponent","to","Link","NavLink","Back","LinkType","linkType","WrapperDiv"],"sourceRoot":""}